#!/usr/bin/env sh

set errexit  # Exit on error.
set nounset  # Error on undeclared variables.
set pipefail # Error if any command in a pipe fails.

REPO_URL=git@github.com:murar8/dotfiles.git
REPO_DIR=$HOME/.dotfiles
SCRIPT_DIR=$(cd -P -- "$(dirname -- "$(command -v -- "$0")")" && pwd -P)

echo "Setup started"
echo "Repository:       $REPO_URL"
echo "Target directory: $REPO_DIR"
echo

dot() {
	# shellcheck disable=SC2068
	git --git-dir="$REPO_DIR"/ --work-tree="$HOME" $@
}

cd "$HOME"

if ! command -v git >/dev/null; then
	echo "Error: could not locate git in your path."
	exit 1
fi

if [ -d "$REPO_DIR" ]; then
	echo "Aborting: $REPO_DIR already exists."
	exit 0
fi

# Most providers (e.g. GitHub) will not allow you to clone into a bare
# repository directly, so we clone into a temporary directory and then convert
# it to a bare repository.
if [ -d "$SCRIPT_DIR/.git" ]; then
	echo "Non bare repository detected in $SCRIPT_DIR, deleting..."
fi

echo "Cloning repository to $REPO_DIR"
echo

git clone --bare "$REPO_URL" "$REPO_DIR"

echo
echo "Cloned repository to $REPO_DIR"

dot config status.showUntrackedFiles no
echo

if [ -n "$(dot status --porcelain)" ]; then
	echo "Stashing potential conflicts in $STASH_NAME"
	echo
	dot -c user.name="$USER" -c user.email="$USER"@localhost stash save "$STASH_NAME"
fi
