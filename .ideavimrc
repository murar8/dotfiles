""" Settings

set clipboard=unnamed,unnamedplus,ideaput
set history=2048
set ideajoin
set ideastrictmode
set matchpairs+=<:>
set scrolloff=5

set gdefault
set hlsearch
set incsearch

set ignorecase
set smartcase

set notimeout
" set ttimeout

let mapleader = " "
let maplocalleader = "\\"


""" Plugins

set argtextobj
set commentary
set exchange
set highlightedyank
set matchit
set multiple-cursors
set NERDTree
set surround
set textobj-entire
set textobj-indent
set easymotion
set which-key

let g:argtextobj_pairs="(:),{:},<:>,[:]" " https://incrementalelm.com/editor-config/
let g:WhichKey_ShowVimActions = "true"


""" Mappings

" Simplify indentation in visual mode, by making the action repeatable.
" https://www.cyberwizard.io/posts/the-ultimate-ideavim-setup
vnoremap < <gv
vnoremap > >gv

nnoremap <esc> :noh<return><esc>

" Multiple cursors
" https://youtrack.jetbrains.com/issue/VIM-2178/multiple-cursors-defines-incorrect-keys#focus=Comments-27-7067864.0-0
nmap <c-n> <Plug>NextWholeOccurrence
xmap <c-n> <Plug>NextWholeOccurrence
omap <c-n> <Plug>NextWholeOccurrence
nmap g<c-n> <Plug>NextOccurrence
xmap g<c-n> <Plug>NextOccurrence
omap g<c-n> <Plug>NextOccurrence
xmap <c-x> <Plug>SkipOccurrence
xmap <c-p> <Plug>RemoveOccurrence
nmap <a-n> <Plug>AllWholeOccurrences
xmap <a-n> <Plug>AllWholeOccurrences
omap <a-n> <Plug>AllWholeOccurrences
nmap g<a-n> <Plug>AllOccurrences
xmap g<a-n> <Plug>AllOccurrences
omap g<a-n> <Plug>AllOccurrences

nmap [e <Action>(GotoPreviousError)
nmap ]e <Action>(GotoNextError)
nmap [m <Action>(MethodUp)
nmap ]m <Action>(MethodDown)
nmap [c <Action>(JumpToLastChange)
nmap ]c <Action>(JumpToNextChange)
nmap [[ <Action>(GotoPrevElementUnderCaretUsage)
nmap ]] <Action>(GotoNextElementUnderCaretUsage)
nmap [s <Action>(PrevSplitter)
nmap ]s <Action>(NextSplitter)

nmap <s-l> <Action>(NextTab)
nmap <s-h> <Action>(PreviousTab)

nmap <s-k> <Action>(ShowHoverInfo)
nmap <s-n> <Action>(ShowErrorDescription)

nmap <c-w> <Action>(EditorSelectWord)
xmap <c-w> <Action>(EditorSelectWord)
nmap <c-s-w> <Action>(EditorUnSelectWord)
xmap <c-s-w> <Action>(EditorUnSelectWord)

let g:WhichKeyDesc_leader = "<leader><leader> Easymotion"
let g:WhichKeyDesc_t = "<leader>t Toggle NERDTree"
let g:WhichKeyDesc_q = "<leader>q Hide all tool windows"
let g:WhichKeyDesc_backspace = "<leader><Retroceso> Close Editor"
nmap <leader>t :NERDTreeToggle<cr>
nmap <leader>q <Action>(HideAllWindows)
nmap <leader><bs> <Action>(CloseEditor)
