// vim:ft=jsonc
[
  // VSCode attempt to emulate https://github.com/terryma/vim-multiple-cursors
  // https://github.com/VSCodeVim/Vim/issues/3588#issuecomment-1139373669
  // Use built in VSCode pattern matcher for entire word search (ctrl + n)
  {
    "key": "ctrl+n",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "vim.active && editorFocus && vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualBlock' && !inDebugRepl"
  },
  // Skip current match (ctrl + x)
  {
    "key": "ctrl+x",
    "command": "editor.action.moveSelectionToNextFindMatch",
    "when": "vim.active && editorFocus && vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualBlock' && !inDebugRepl"
  },
  // Go back to previous match (ctrl + p)
  {
    "key": "ctrl+p",
    "command": "editor.action.moveSelectionToPreviousFindMatch",
    "when": "vim.active && editorFocus && vim.mode == 'Visual' || vim.mode == 'VisualBlock' && !inDebugRepl"
  },
  // Select all matches (ctrl + a). This is effectively the same as (ctrl + shift + l)
  {
    "key": "ctrl+a",
    "command": "editor.action.selectHighlights",
    "when": "vim.active && editorFocus && vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualBlock' && !inDebugRepl"
  },

  // https://stackoverflow.com/a/59690963
  {
    "key": "escape",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "!editorTextFocus && !terminalFocus"
  },

  // allow ctrl+w in terminal
  {
    "key": "ctrl+w",
    "command": "-workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
  },

  // save all on c-s
  {
    "key": "ctrl+s",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.files.save",
        "workbench.action.files.saveFiles"
      ]
    }
  },

  // claude code
  {
    "key": "shift+enter",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\\\r\n" },
    "when": "terminalFocus"
  },

  // editor management
  {
    "key": "ctrl+k q",
    "command": "workbench.action.closeActiveEditor",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+k q",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+k x",
    "command": "workbench.action.closeOtherEditors"
  },
  {
    "key": "ctrl+k a",
    "command": "workbench.action.closeAllEditors"
  },
  {
    "key": "ctrl+k l",
    "command": "workbench.action.closeEditorsToTheLeft"
  },
  {
    "key": "ctrl+k r",
    "command": "workbench.action.closeEditorsToTheRight"
  },
  {
    "key": "ctrl+k r",
    "command": "-workbench.action.files.revealActiveFileInWindows"
  },

  // sidebar
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+alt+y",
    "command": "workbench.action.toggleSidebarVisibility"
  },

  // panel
  {
    "key": "ctrl+alt+m",
    "command": "workbench.action.toggleMaximizedPanel"
  },

  // inline chat
  {
    "key": "ctrl+shift+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+k",
    "command": "aipopup.action.modal.generate",
    "when": "editorFocus && !composerBarIsVisible && !inlineChatFocused"
  },

  // new chat
  {
    "key": "ctrl+l",
    "command": "-aichat.newchataction"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-composer.newAgentChat"
  },
  {
    "key": "ctrl+alt+n",
    "command": "composer.newAgentChat"
  },

  // toggle chat
  {
    "key": "ctrl+i",
    "command": "-composer.startComposerPrompt"
  },
  {
    "key": "alt+n",
    "command": "composer.startComposerPrompt"
  },

  // switch terminal tabs
  {
    "key": "ctrl+shift+]",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+shift+[",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+shift+alt+[",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+alt+]",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  }
]
